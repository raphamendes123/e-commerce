// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Store.Payment.API.Domain.Data.Contexts;

#nullable disable

namespace Store.Payment.API.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Store.Payment.API.Domain.Data.Entitys.PaymentEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("IdOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TypePayment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);
                });

            modelBuilder.Entity("Store.Payment.API.Domain.Data.Entitys.TransactionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AuthorizationCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CreditCardCompany")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("IdPayment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NSU")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TID")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("TransactionCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPayment");

                    b.ToTable("Transactions", (string)null);
                });

            modelBuilder.Entity("Store.Payment.API.Domain.Data.Entitys.TransactionEntity", b =>
                {
                    b.HasOne("Store.Payment.API.Domain.Data.Entitys.PaymentEntity", "Payment")
                        .WithMany("Transactions")
                        .HasForeignKey("IdPayment")
                        .IsRequired();

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("Store.Payment.API.Domain.Data.Entitys.PaymentEntity", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
